name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: 46112/webide-spring-be

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Notify on success
      if: success()
      run: |
        echo "âœ… Docker image built and pushed successfully!"
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

    - name: Setup SSH
      if: success() && github.ref == 'refs/heads/main'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AZURE_VM_SSH_KEY }}" > ~/.ssh/azure_vm_key
        chmod 600 ~/.ssh/azure_vm_key
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Azure VM
      if: success() && github.ref == 'refs/heads/main'
      run: |
        ssh -i ~/.ssh/azure_vm_key -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
          echo "ðŸ”„ Updating Spring Boot service..."
          docker compose pull webide-spring-be
          docker compose up -d webide-spring-be
          echo "âœ… Spring Boot service updated successfully!"
          docker compose ps webide-spring-be
        EOF